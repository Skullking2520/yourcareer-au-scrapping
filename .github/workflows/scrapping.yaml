name: Run Scrapping

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run-occupation-scraping:
    runs-on: [self-hosted, runner]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install Google Chrome
      shell: powershell
      run: |
        Write-Host "Installing Google Chrome via winget..."
        winget install --id=Google.Chrome --silent --accept-package-agreements --accept-source-agreements
        $exitCode = $LASTEXITCODE
        if ($exitCode -eq 1) {
            Write-Host "Chrome is already installed or no upgrade available. Continuing..."
            exit 0
        }
        elseif ($exitCode -ne 0) {
            Write-Error "winget install failed with exit code $exitCode"
            exit $exitCode
        }

    - name: Install Chromedriver
      shell: powershell
      run: |
        Write-Host "Downloading Chromedriver..."
        Invoke-WebRequest -Uri "https://storage.googleapis.com/chrome-for-testing-public/132.0.6834.83/windows64/chromedriver-win64.zip" -OutFile "chromedriver-win64.zip"
        Write-Host "Extracting Chromedriver..."
        Expand-Archive -Path "chromedriver-win64.zip" -DestinationPath "chromedriver" -Force
        $chromedriverPath = Join-Path (Resolve-Path "chromedriver") "chromedriver.exe"
        Write-Host "Adding Chromedriver directory to PATH"
        $env:PATH = "$env:PATH;$([System.IO.Path]::GetDirectoryName($chromedriverPath))"
        Write-Host "Chromedriver installed at: $chromedriverPath"

    - name: Install dependencies
      shell: powershell
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Occupation Scraping
      shell: powershell
      env:
        SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
      run: |
        python main.py

  run-vacancies-scraping:
    runs-on: [self-hosted, runner-2]

    steps:
    - name: Wait for 15 minutes
      shell: powershell
      run: Start-Sleep -Seconds 900
    
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install Google Chrome
      shell: powershell
      run: |
        Write-Host "Installing Google Chrome via winget..."
        winget install --id=Google.Chrome --silent --accept-package-agreements --accept-source-agreements
        $exitCode = $LASTEXITCODE
        if ($exitCode -eq 1) {
            Write-Host "Chrome is already installed or no upgrade available. Continuing..."
            exit 0
        }
        elseif ($exitCode -ne 0) {
            Write-Error "winget install failed with exit code $exitCode"
            exit $exitCode
        }

    - name: Install Chromedriver
      shell: powershell
      run: |
        Write-Host "Downloading Chromedriver..."
        Invoke-WebRequest -Uri "https://storage.googleapis.com/chrome-for-testing-public/132.0.6834.83/windows64/chromedriver-win64.zip" -OutFile "chromedriver-win64.zip"
        Write-Host "Extracting Chromedriver..."
        Expand-Archive -Path "chromedriver-win64.zip" -DestinationPath "chromedriver" -Force
        $chromedriverPath = Join-Path (Resolve-Path "chromedriver") "chromedriver.exe"
        Write-Host "Adding Chromedriver directory to PATH"
        $env:PATH = "$env:PATH;$([System.IO.Path]::GetDirectoryName($chromedriverPath))"
        Write-Host "Chromedriver installed at: $chromedriverPath"

    - name: Install dependencies
      shell: powershell
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Vacancies Scraping
      shell: powershell
      env:
        SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
      run: |
        python vacancy.py
